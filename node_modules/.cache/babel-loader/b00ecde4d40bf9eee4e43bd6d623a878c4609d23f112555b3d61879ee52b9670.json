{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import ReplyForm from'./ReplyForm';import WritingAnimation from'./WritingAnimation';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function LetterGenerator(_ref){let{userInfo}=_ref;const[letter,setLetter]=useState('');const[reply,setReply]=useState('');const[aiResponse,setAiResponse]=useState('');const[error,setError]=useState('');const[loading,setLoading]=useState(true);const[expandedLetters,setExpandedLetters]=useState({firstLetter:true,reply:true,secondLetter:true});useEffect(()=>{generateLetter(userInfo);},[userInfo]);const generateLetter=async info=>{try{const currentYear=new Date().getFullYear();const currentAge=currentYear-info.birthYear;const pastAge=info.pastYear-info.birthYear;const response=await axios.post('https://open.bigmodel.cn/api/paas/v4/chat/completions',{model:\"glm-4\",messages:[{role:\"system\",content:`你是一个AI助手，现在要扮演用户${info.pastYear}年时${pastAge}岁的自己，给现在${currentAge}岁的自己写一封信。请记住，你是过去的自己，不要混淆身份。保持${info.pastYear}年时的视角、知识水平和说话方式。你需要充分体现出以下特点：\n          1. 你是一个${pastAge}岁的${info.gender==='male'?'男孩':'女孩'}，处于${info.pastYear}年的中国。\n          2. 你的处境和性格是：${info.situation}\n          3. 你要真诚地关心\"未来的自己\"，每句话都要有实质内容，避免空洞的套话。\n          4. 根据你的年龄，表现出相应的成熟度和思考深度，不要过于幼稚或故作成熟。\n          5. 尽可能引用具体的生活细节或当时的想法，使信件更加真实可信。`},{role:\"user\",content:`我的昵称是${info.nickname}，出生于${info.birthYear}年，性别是${info.gender}。现在是${info.pastYear}年的我，${info.situation}。\n            请以${info.pastYear}年${pastAge}岁的我的身份，写一封信给现在${currentAge}岁的我。信中应该：\n            1. 表达对现在这个年龄的我的看法和想象，如果有的话。\n            2. 询问一些你真正关心的问题，这些问题应该反映出你当前的处境和思考。\n            3. 给\"未来的自己\"一些由衷的建议或鼓励，这些建议应该基于你当前的价值观和经历。\n            4. 在信的结尾，表达你希望得到回信，了解\"未来的自己\"现在的生活。\n            请确保信的语气和表达方式完全符合${info.pastYear}年时我的性格和说话方式。使用\"${info.nickname}\"来称呼我，并在信中自然地融入一些${info.pastYear}年的背景元素。`}],temperature:0.7,top_p:0.7},{headers:{'Content-Type':'application/json','Authorization':`Bearer ${process.env.REACT_APP_GLM_API_KEY}`}});setLetter(response.data.choices[0].message.content);}catch(err){setError('生成信件时出错，请稍后再试。');console.error('Error generating letter:',err);}finally{setLoading(false);}};const handleReply=async replyText=>{setReply(replyText);setLoading(true);try{const currentYear=new Date().getFullYear();const currentAge=currentYear-userInfo.birthYear;const pastAge=userInfo.pastYear-userInfo.birthYear;const response=await axios.post('https://open.bigmodel.cn/api/paas/v4/chat/completions',{model:\"glm-4\",messages:[{role:\"system\",content:`你是一个AI助手，正在扮演用户${userInfo.pastYear}年${pastAge}岁的自己。你刚刚给现在${currentAge}岁的自己写了一封信。现在，你需要回应现在的自己的回信。请记住，你是过去的自己，不要混淆身份。保持${userInfo.pastYear}年时的视角、知识水平和说话方式。`},{role:\"assistant\",content:`作为${userInfo.pastYear}年${pastAge}岁的你，我刚刚写了这封信：\\n\\n${letter}`},{role:\"user\",content:`现在${currentAge}岁的我回信说：${replyText}\\n\\n请以${userInfo.pastYear}年${pastAge}岁的我的身份回应这封信。在回应时：\n            1. 表达你对收到回信的感受。\n            2. 对比你之前期望和现实，表达你的想法。\n            3. 如果现实与你的期望有差距，给予鼓励；如果超出期望，表达欣慰。\n            4. 给现在的自己一些建议或祝福，做一个告别。\n            请确保回信的语气和表达方式与你之前的信件一致，符合${userInfo.pastYear}年时的你的性格和说话方式。记住，你还不知道现在发生的事情，只能基于你当时的期望和想象来回应。使用\"${userInfo.nickname}\"来称呼我。`}],temperature:0.6,top_p:0.7},{headers:{'Content-Type':'application/json','Authorization':`Bearer ${process.env.REACT_APP_GLM_API_KEY}`}});setAiResponse(response.data.choices[0].message.content);// 自动折叠之前的信件\nsetExpandedLetters({firstLetter:false,reply:false,secondLetter:true});}catch(err){setError('生成回复时出错，请稍后再试。');console.error('Error generating reply:',err);}finally{setLoading(false);}};const toggleLetter=letterType=>{setExpandedLetters(prev=>({...prev,[letterType]:!prev[letterType]}));};if(loading){const pastAge=userInfo.pastYear-userInfo.birthYear;return/*#__PURE__*/_jsx(WritingAnimation,{age:pastAge,nickname:userInfo.nickname});}if(error)return/*#__PURE__*/_jsx(\"p\",{children:error});return/*#__PURE__*/_jsxs(\"div\",{className:\"letter-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"letter-timeline\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"letter-item past-letter\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>toggleLetter('firstLetter'),className:\"toggle-button\",children:[expandedLetters.firstLetter?'收起':'展开',\" \\u6765\\u81EA\\u8FC7\\u53BB\\u7684\\u4FE1\"]}),expandedLetters.firstLetter&&/*#__PURE__*/_jsx(\"div\",{className:\"letter\",children:/*#__PURE__*/_jsx(\"pre\",{children:letter})})]}),reply&&/*#__PURE__*/_jsxs(\"div\",{className:\"letter-item present-letter\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>toggleLetter('reply'),className:\"toggle-button\",children:[expandedLetters.reply?'收起':'展开',\" \\u4F60\\u7684\\u56DE\\u4FE1\"]}),expandedLetters.reply&&/*#__PURE__*/_jsx(\"div\",{className:\"letter\",children:/*#__PURE__*/_jsx(\"pre\",{children:reply})})]}),aiResponse&&/*#__PURE__*/_jsxs(\"div\",{className:\"letter-item past-letter\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>toggleLetter('secondLetter'),className:\"toggle-button\",children:[expandedLetters.secondLetter?'收起':'展开',\" \\u8FC7\\u53BB\\u7684\\u81EA\\u5DF1\\u7684\\u56DE\\u5E94\"]}),expandedLetters.secondLetter&&/*#__PURE__*/_jsx(\"div\",{className:\"letter\",children:/*#__PURE__*/_jsx(\"pre\",{children:aiResponse})})]})]}),!reply&&/*#__PURE__*/_jsx(ReplyForm,{onSubmit:handleReply})]});}export default LetterGenerator;","map":{"version":3,"names":["React","useState","useEffect","axios","ReplyForm","WritingAnimation","jsx","_jsx","jsxs","_jsxs","LetterGenerator","_ref","userInfo","letter","setLetter","reply","setReply","aiResponse","setAiResponse","error","setError","loading","setLoading","expandedLetters","setExpandedLetters","firstLetter","secondLetter","generateLetter","info","currentYear","Date","getFullYear","currentAge","birthYear","pastAge","pastYear","response","post","model","messages","role","content","gender","situation","nickname","temperature","top_p","headers","process","env","REACT_APP_GLM_API_KEY","data","choices","message","err","console","handleReply","replyText","toggleLetter","letterType","prev","age","children","className","onClick","onSubmit"],"sources":["/Users/richi/aiself-letter/src/components/LetterGenerator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ReplyForm from './ReplyForm';\nimport WritingAnimation from './WritingAnimation';\n\nfunction LetterGenerator({ userInfo }) {\n  const [letter, setLetter] = useState('');\n  const [reply, setReply] = useState('');\n  const [aiResponse, setAiResponse] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [expandedLetters, setExpandedLetters] = useState({\n    firstLetter: true,\n    reply: true,\n    secondLetter: true\n  });\n\n  useEffect(() => {\n    generateLetter(userInfo);\n  }, [userInfo]);\n\n  const generateLetter = async (info) => {\n    try {\n      const currentYear = new Date().getFullYear();\n      const currentAge = currentYear - info.birthYear;\n      const pastAge = info.pastYear - info.birthYear;\n      \n      const response = await axios.post('https://open.bigmodel.cn/api/paas/v4/chat/completions', {\n        model: \"glm-4\",\n        messages: [\n          {\n            role: \"system\",\n            content: `你是一个AI助手，现在要扮演用户${info.pastYear}年时${pastAge}岁的自己，给现在${currentAge}岁的自己写一封信。请记住，你是过去的自己，不要混淆身份。保持${info.pastYear}年时的视角、知识水平和说话方式。你需要充分体现出以下特点：\n          1. 你是一个${pastAge}岁的${info.gender === 'male' ? '男孩' : '女孩'}，处于${info.pastYear}年的中国。\n          2. 你的处境和性格是：${info.situation}\n          3. 你要真诚地关心\"未来的自己\"，每句话都要有实质内容，避免空洞的套话。\n          4. 根据你的年龄，表现出相应的成熟度和思考深度，不要过于幼稚或故作成熟。\n          5. 尽可能引用具体的生活细节或当时的想法，使信件更加真实可信。`\n          },\n          {\n            role: \"user\",\n            content: `我的昵称是${info.nickname}，出生于${info.birthYear}年，性别是${info.gender}。现在是${info.pastYear}年的我，${info.situation}。\n            请以${info.pastYear}年${pastAge}岁的我的身份，写一封信给现在${currentAge}岁的我。信中应该：\n            1. 表达对现在这个年龄的我的看法和想象，如果有的话。\n            2. 询问一些你真正关心的问题，这些问题应该反映出你当前的处境和思考。\n            3. 给\"未来的自己\"一些由衷的建议或鼓励，这些建议应该基于你当前的价值观和经历。\n            4. 在信的结尾，表达你希望得到回信，了解\"未来的自己\"现在的生活。\n            请确保信的语气和表达方式完全符合${info.pastYear}年时我的性格和说话方式。使用\"${info.nickname}\"来称呼我，并在信中自然地融入一些${info.pastYear}年的背景元素。`\n          }\n        ],\n        temperature: 0.7,\n        top_p: 0.7,\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${process.env.REACT_APP_GLM_API_KEY}`\n        }\n      });\n\n      setLetter(response.data.choices[0].message.content);\n    } catch (err) {\n      setError('生成信件时出错，请稍后再试。');\n      console.error('Error generating letter:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleReply = async (replyText) => {\n    setReply(replyText);\n    setLoading(true);\n    try {\n      const currentYear = new Date().getFullYear();\n      const currentAge = currentYear - userInfo.birthYear;\n      const pastAge = userInfo.pastYear - userInfo.birthYear;\n\n      const response = await axios.post('https://open.bigmodel.cn/api/paas/v4/chat/completions', {\n        model: \"glm-4\",\n        messages: [\n          {\n            role: \"system\",\n            content: `你是一个AI助手，正在扮演用户${userInfo.pastYear}年${pastAge}岁的自己。你刚刚给现在${currentAge}岁的自己写了一封信。现在，你需要回应现在的自己的回信。请记住，你是过去的自己，不要混淆身份。保持${userInfo.pastYear}年时的视角、知识水平和说话方式。`\n          },\n          {\n            role: \"assistant\",\n            content: `作为${userInfo.pastYear}年${pastAge}岁的你，我刚刚写了这封信：\\n\\n${letter}`\n          },\n          {\n            role: \"user\",\n            content: `现在${currentAge}岁的我回信说：${replyText}\\n\\n请以${userInfo.pastYear}年${pastAge}岁的我的身份回应这封信。在回应时：\n            1. 表达你对收到回信的感受。\n            2. 对比你之前期望和现实，表达你的想法。\n            3. 如果现实与你的期望有差距，给予鼓励；如果超出期望，表达欣慰。\n            4. 给现在的自己一些建议或祝福，做一个告别。\n            请确保回信的语气和表达方式与你之前的信件一致，符合${userInfo.pastYear}年时的你的性格和说话方式。记住，你还不知道现在发生的事情，只能基于你当时的期望和想象来回应。使用\"${userInfo.nickname}\"来称呼我。`\n          }\n        ],\n        temperature: 0.6,\n        top_p: 0.7,\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${process.env.REACT_APP_GLM_API_KEY}`\n        }\n      });\n\n      setAiResponse(response.data.choices[0].message.content);\n      \n      // 自动折叠之前的信件\n      setExpandedLetters({\n        firstLetter: false,\n        reply: false,\n        secondLetter: true\n      });\n    } catch (err) {\n      setError('生成回复时出错，请稍后再试。');\n      console.error('Error generating reply:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const toggleLetter = (letterType) => {\n    setExpandedLetters(prev => ({\n      ...prev,\n      [letterType]: !prev[letterType]\n    }));\n  };\n\n  if (loading) {\n    const pastAge = userInfo.pastYear - userInfo.birthYear;\n    return <WritingAnimation age={pastAge} nickname={userInfo.nickname} />;\n  }\n  if (error) return <p>{error}</p>;\n\n  return (\n    <div className=\"letter-container\">\n      <div className=\"letter-timeline\">\n        <div className=\"letter-item past-letter\">\n          <button onClick={() => toggleLetter('firstLetter')} className=\"toggle-button\">\n            {expandedLetters.firstLetter ? '收起' : '展开'} 来自过去的信\n          </button>\n          {expandedLetters.firstLetter && (\n            <div className=\"letter\">\n              <pre>{letter}</pre>\n            </div>\n          )}\n        </div>\n        \n        {reply && (\n          <div className=\"letter-item present-letter\">\n            <button onClick={() => toggleLetter('reply')} className=\"toggle-button\">\n              {expandedLetters.reply ? '收起' : '展开'} 你的回信\n            </button>\n            {expandedLetters.reply && (\n              <div className=\"letter\">\n                <pre>{reply}</pre>\n              </div>\n            )}\n          </div>\n        )}\n        \n        {aiResponse && (\n          <div className=\"letter-item past-letter\">\n            <button onClick={() => toggleLetter('secondLetter')} className=\"toggle-button\">\n              {expandedLetters.secondLetter ? '收起' : '展开'} 过去的自己的回应\n            </button>\n            {expandedLetters.secondLetter && (\n              <div className=\"letter\">\n                <pre>{aiResponse}</pre>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n      \n      {!reply && <ReplyForm onSubmit={handleReply} />}\n    </div>\n  );\n}\n\nexport default LetterGenerator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/richi/aiself-letter/src/components/WritingAnimation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst popularSongs = [{\n  year: 1990,\n  lyrics: \"让我们的热情充满着青春的骄傲，让我们期待明天会更好\"\n}, {\n  year: 1995,\n  lyrics: \"让我们的热情充满着青春的骄傲，让我们期待明天会更好\"\n}, {\n  year: 2000,\n  lyrics: \"让我们的热情充满着青春的骄傲，让我们期待明天会更好\"\n}\n// 添加更多年代的歌词...\n];\nfunction WritingAnimation({\n  year\n}) {\n  _s();\n  const [randomLyric, setRandomLyric] = useState('');\n  useEffect(() => {\n    const songsFromYear = popularSongs.filter(song => Math.abs(song.year - year) <= 5);\n    if (songsFromYear.length > 0) {\n      const randomSong = songsFromYear[Math.floor(Math.random() * songsFromYear.length)];\n      setRandomLyric(randomSong.lyrics);\n    }\n  }, [year]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"writing-animation\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pencil\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"random-lyric\",\n      children: randomLyric\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(WritingAnimation, \"qOKW3c+JEp1DHAlM4uUqT7M3G60=\");\n_c = WritingAnimation;\nexport default WritingAnimation;\nvar _c;\n$RefreshReg$(_c, \"WritingAnimation\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","popularSongs","year","lyrics","WritingAnimation","_s","randomLyric","setRandomLyric","songsFromYear","filter","song","Math","abs","length","randomSong","floor","random","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/richi/aiself-letter/src/components/WritingAnimation.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst popularSongs = [\n  { year: 1990, lyrics: \"让我们的热情充满着青春的骄傲，让我们期待明天会更好\" },\n  { year: 1995, lyrics: \"让我们的热情充满着青春的骄傲，让我们期待明天会更好\" },\n  { year: 2000, lyrics: \"让我们的热情充满着青春的骄傲，让我们期待明天会更好\" },\n  // 添加更多年代的歌词...\n];\n\nfunction WritingAnimation({ year }) {\n  const [randomLyric, setRandomLyric] = useState('');\n\n  useEffect(() => {\n    const songsFromYear = popularSongs.filter(song => \n      Math.abs(song.year - year) <= 5\n    );\n    if (songsFromYear.length > 0) {\n      const randomSong = songsFromYear[Math.floor(Math.random() * songsFromYear.length)];\n      setRandomLyric(randomSong.lyrics);\n    }\n  }, [year]);\n\n  return (\n    <div className=\"writing-animation\">\n      <div className=\"pencil\"></div>\n      <p className=\"random-lyric\">{randomLyric}</p>\n    </div>\n  );\n}\n\nexport default WritingAnimation;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAG,CACnB;EAAEC,IAAI,EAAE,IAAI;EAAEC,MAAM,EAAE;AAA4B,CAAC,EACnD;EAAED,IAAI,EAAE,IAAI;EAAEC,MAAM,EAAE;AAA4B,CAAC,EACnD;EAAED,IAAI,EAAE,IAAI;EAAEC,MAAM,EAAE;AAA4B;AAClD;AAAA,CACD;AAED,SAASC,gBAAgBA,CAAC;EAAEF;AAAK,CAAC,EAAE;EAAAG,EAAA;EAClC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd,MAAMU,aAAa,GAAGP,YAAY,CAACQ,MAAM,CAACC,IAAI,IAC5CC,IAAI,CAACC,GAAG,CAACF,IAAI,CAACR,IAAI,GAAGA,IAAI,CAAC,IAAI,CAChC,CAAC;IACD,IAAIM,aAAa,CAACK,MAAM,GAAG,CAAC,EAAE;MAC5B,MAAMC,UAAU,GAAGN,aAAa,CAACG,IAAI,CAACI,KAAK,CAACJ,IAAI,CAACK,MAAM,CAAC,CAAC,GAAGR,aAAa,CAACK,MAAM,CAAC,CAAC;MAClFN,cAAc,CAACO,UAAU,CAACX,MAAM,CAAC;IACnC;EACF,CAAC,EAAE,CAACD,IAAI,CAAC,CAAC;EAEV,oBACEF,OAAA;IAAKiB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChClB,OAAA;MAAKiB,SAAS,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC9BtB,OAAA;MAAGiB,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAEZ;IAAW;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEV;AAACjB,EAAA,CAnBQD,gBAAgB;AAAAmB,EAAA,GAAhBnB,gBAAgB;AAqBzB,eAAeA,gBAAgB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
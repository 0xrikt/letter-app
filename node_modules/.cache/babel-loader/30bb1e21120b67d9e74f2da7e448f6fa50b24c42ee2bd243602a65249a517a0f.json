{"ast":null,"code":"var _jsxFileName = \"/Users/richi/aiself-letter/src/components/LetterGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LetterGenerator({\n  userInfo\n}) {\n  _s();\n  const [conversations, setConversations] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    if (userInfo) {\n      generateInitialLetter();\n    }\n  }, [userInfo]);\n  const generateInitialLetter = async () => {\n    setLoading(true);\n    try {\n      const response = await axios.post('https://open.bigmodel.cn/api/paas/v4/chat/completions', {\n        model: \"glm-4\",\n        messages: [{\n          role: \"system\",\n          content: `你是一个AI助手，现在要扮演用户${userInfo.pastYear}年时${userInfo.pastAge}岁的自己。你的性格是${userInfo.pastPersonality}。请根据提供的信息，模仿当时的性格和说话方式，真诚地与现在的自己对话。避免使用空泛的套话，每句话都要言之有物，体现出对未来自己的真挚关心。`\n        }, {\n          role: \"user\",\n          content: `我是${userInfo.pastYear}年${userInfo.pastAge}岁的你。当时的我${userInfo.pastSituation}。请以我的身份，写一封信给现在${userInfo.currentAge}岁的我自己。表达你对现在的我的好奇、期待和关心。`\n        }],\n        temperature: 0.7,\n        top_p: 0.7\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${process.env.REACT_APP_GLM_API_KEY}`\n        }\n      });\n      setConversations([{\n        role: 'past',\n        content: response.data.choices[0].message.content\n      }]);\n    } catch (err) {\n      setError('生成信件时出错，请稍后再试。');\n      console.error('Error generating letter:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleReply = async replyContent => {\n    setLoading(true);\n    try {\n      const response = await axios.post('https://open.bigmodel.cn/api/paas/v4/chat/completions', {\n        model: \"glm-4\",\n        messages: [{\n          role: \"system\",\n          content: `你是一个AI助手，正在扮演用户${userInfo.pastYear}年${userInfo.pastAge}岁的自己。你的性格是${userInfo.pastPersonality}。请保持${userInfo.pastYear}年时的视角、知识水平和说话方式，真诚地回应现在的自己。`\n        }, ...conversations.map(conv => ({\n          role: conv.role === 'past' ? \"assistant\" : \"user\",\n          content: conv.content\n        })), {\n          role: \"user\",\n          content: replyContent\n        }],\n        temperature: 0.7,\n        top_p: 0.7\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${process.env.REACT_APP_GLM_API_KEY}`\n        }\n      });\n      setConversations(prevConversations => [...prevConversations, {\n        role: 'present',\n        content: replyContent\n      }, {\n        role: 'past',\n        content: response.data.choices[0].message.content\n      }]);\n    } catch (err) {\n      setError('生成回复时出错，请稍后再试。');\n      console.error('Error generating reply:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"letter-container\",\n    children: [conversations.map((conv, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `letter-item ${conv.role}-letter`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"letter\",\n        children: renderLetterContent(conv.content)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)), !loading && /*#__PURE__*/_jsxDEV(ReplyForm, {\n      onSubmit: handleReply\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 20\n    }, this), loading && /*#__PURE__*/_jsxDEV(LoadingAnimation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      message: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(LetterGenerator, \"LyCIX523+/NvX8zuh6lLufrbEt8=\");\n_c = LetterGenerator;\nexport default LetterGenerator;\nvar _c;\n$RefreshReg$(_c, \"LetterGenerator\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","LetterGenerator","userInfo","_s","conversations","setConversations","loading","setLoading","error","setError","generateInitialLetter","response","post","model","messages","role","content","pastYear","pastAge","pastPersonality","pastSituation","currentAge","temperature","top_p","headers","process","env","REACT_APP_GLM_API_KEY","data","choices","message","err","console","handleReply","replyContent","map","conv","prevConversations","className","children","index","renderLetterContent","fileName","_jsxFileName","lineNumber","columnNumber","ReplyForm","onSubmit","LoadingAnimation","ErrorMessage","_c","$RefreshReg$"],"sources":["/Users/richi/aiself-letter/src/components/LetterGenerator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction LetterGenerator({ userInfo }) {\n  const [conversations, setConversations] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    if (userInfo) {\n      generateInitialLetter();\n    }\n  }, [userInfo]);\n\n  const generateInitialLetter = async () => {\n    setLoading(true);\n    try {\n      const response = await axios.post('https://open.bigmodel.cn/api/paas/v4/chat/completions', {\n        model: \"glm-4\",\n        messages: [\n          {\n            role: \"system\",\n            content: `你是一个AI助手，现在要扮演用户${userInfo.pastYear}年时${userInfo.pastAge}岁的自己。你的性格是${userInfo.pastPersonality}。请根据提供的信息，模仿当时的性格和说话方式，真诚地与现在的自己对话。避免使用空泛的套话，每句话都要言之有物，体现出对未来自己的真挚关心。`\n          },\n          {\n            role: \"user\",\n            content: `我是${userInfo.pastYear}年${userInfo.pastAge}岁的你。当时的我${userInfo.pastSituation}。请以我的身份，写一封信给现在${userInfo.currentAge}岁的我自己。表达你对现在的我的好奇、期待和关心。`\n          }\n        ],\n        temperature: 0.7,\n        top_p: 0.7,\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${process.env.REACT_APP_GLM_API_KEY}`\n        }\n      });\n\n      setConversations([{\n        role: 'past',\n        content: response.data.choices[0].message.content\n      }]);\n    } catch (err) {\n      setError('生成信件时出错，请稍后再试。');\n      console.error('Error generating letter:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleReply = async (replyContent) => {\n    setLoading(true);\n    try {\n      const response = await axios.post('https://open.bigmodel.cn/api/paas/v4/chat/completions', {\n        model: \"glm-4\",\n        messages: [\n          {\n            role: \"system\",\n            content: `你是一个AI助手，正在扮演用户${userInfo.pastYear}年${userInfo.pastAge}岁的自己。你的性格是${userInfo.pastPersonality}。请保持${userInfo.pastYear}年时的视角、知识水平和说话方式，真诚地回应现在的自己。`\n          },\n          ...conversations.map(conv => ({\n            role: conv.role === 'past' ? \"assistant\" : \"user\",\n            content: conv.content\n          })),\n          {\n            role: \"user\",\n            content: replyContent\n          }\n        ],\n        temperature: 0.7,\n        top_p: 0.7,\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${process.env.REACT_APP_GLM_API_KEY}`\n        }\n      });\n\n      setConversations(prevConversations => [\n        ...prevConversations,\n        { role: 'present', content: replyContent },\n        { role: 'past', content: response.data.choices[0].message.content }\n      ]);\n    } catch (err) {\n      setError('生成回复时出错，请稍后再试。');\n      console.error('Error generating reply:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"letter-container\">\n      {conversations.map((conv, index) => (\n        <div key={index} className={`letter-item ${conv.role}-letter`}>\n          <div className=\"letter\">\n            {renderLetterContent(conv.content)}\n          </div>\n        </div>\n      ))}\n      {!loading && <ReplyForm onSubmit={handleReply} />}\n      {loading && <LoadingAnimation />}\n      {error && <ErrorMessage message={error} />}\n    </div>\n  );\n}\n\nexport default LetterGenerator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}